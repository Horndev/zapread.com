@model zapread.com.Models.ManageUserViewModel
@using zapread.com.Models.Manage

@{
    ViewBag.Title = "Manage";
    List<string> included = new List<string>();
}

@Html.Partial(partialViewName: "_PartialModalVote")                     @*This is the code for the modal dialog box to vote*@
@Html.Partial(partialViewName: "_PartialModalUpdateUserAlias")          @*This is the code for the modal dialog box to update username*@

<div class="modal inmodal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        @Html.Partial(partialViewName: "_ModalAboutMe", model: @Model.AboutMe)
    </div>
</div>

<div class="modal inmodal" id="ModalProfileImage" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Profile Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UpdateProfileImage", "Manage", FormMethod.Post, new { @class = "dropzone", id = "dropzoneForm", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="fallback">
                        <input name="file" type="file" />
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
            </div>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content">
    <div class="row animated fadeInRight">
        <div class="col-md-4">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Profile Detail</h5>
                    <div class="ibox-tools">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#" data-toggle="modal" data-target="#ModalProfileImage">Update Profile Image</a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div>
                    <div class="ibox-content no-padding border-left-right">
                        <img id="userImageLarge" class="img-fluid" src="@Url.Action("UserImage", "Home", new { size = 500, v = Model.UserProfileImageVersion })" />
                        @*<div class="cuadro_intro_hover">
                            <p style="text-align:center; ">
                            </p>
                            <div class="caption">
                                <div class="blur"></div>
                                <div class="caption-text">
                                    <br />
                                    <a href="#" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#ModalProfileImage">Update Profile Image</a>
                                </div>
                            </div>
                        </div>*@
                    </div>
                    <div class="ibox-content profile-content">
                        <h4>
                            <strong>
                                @if (Request.IsAuthenticated)
                                {
                                    <img class="img-circle user-image-30" src="@Url.Action("UserImage", "Home", new { size = 30, v = Model.UserProfileImageVersion })" /> @Model.UserName
                                }
                                else
                                {
                                    <text>User Name</text>
                                }
                            </strong>
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" style="color:#c3c3c3;">
                                <i class="fa fa-cog"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-user">
                                <li>
                                    <a href="#" data-toggle="modal" data-target="#ModalProfileImage">Upload Profile Image</a>
                                </li>
                                <li>
                                    <a href="javascript:generateRobot(1);">Generate Profile Image (Robot)</a>
                                </li>
                                <li>
                                    <a href="javascript:generateRobot(2);">Generate Profile Image (Cat)</a>
                                </li>
                                <li>
                                    <a href="javascript:generateRobot(3);">Generate Profile Image (Human)</a>
                                </li>
                                <li>
                                    <a href="javascript:generateRobot(4);">Generate Profile Image (Monster)</a>
                                </li>
                                <li>
                                    <a href="#" data-toggle="modal" data-target="#userAliasModal">Change Alias</a>
                                </li>
                            </ul>
                        </h4>

                        <p><i class="fa fa-star"></i> Reputation @Model.Reputation</p>
                        <h5>
                            About me
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" style="color:#c3c3c3;">
                                <i class="fa fa-cog"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-user">
                                <li>
                                    <a href="#" data-toggle="modal" data-target="#myModal">Update Description</a>
                                </li>
                            </ul>
                        </h5>
                        <p>
                            @Model.AboutMe.AboutMe
                        </p>
                        @*Achievements*@
                        <div class="row m-t-lg">
                            <div class="col-md-12">
                                <h5>Achievements</h5>
                                @foreach (var a in Model.AchievementsViewModel.Achievements)
                                {
                                    <img class="ach-hover" data-achid="@a.Id" src="/Img/AchievementImage/@a.ImageId/" title="@a.Name" />
                                }
                            </div>
                        </div>
                        <div class="row m-t-lg">
                            <div class="col-md-4">
                                <h5><strong>@Model.NumPosts</strong> Posts</h5>
                            </div>
                            <div class="col-md-4">
                                <h5><strong>@Model.NumFollowing</strong> Following</h5>
                            </div>
                            <div class="col-md-4">
                                <h5><strong>@Model.NumFollowers</strong> Followers</h5>
                            </div>
                        </div>
                        <div class="user-button">

                        </div>
                    </div>
                    <div class="ibox-title">
                        <h5>Settings</h5>
                    </div>
                    <div>
                        <div class="ibox-content profile-content">
                            <h4>Security</h4>
                            <div class="container">
                                <div class="row justify-content-start">
                                    <div class="col-sm-4">
                                        <a class="btn btn-block btn-outline btn-sm btn-primary" href='/Manage/ManageLogins'><i class="fa fa-user"></i> Manage Logins</a>
                                    </div>
                                    <div class="col-auto">
                                        External Logins
                                    </div>
                                </div>
                                <div class="row justify-content-start">
                                    <div class="col-sm-4">
                                        <a class="btn btn-block btn-outline btn-sm btn-warning" href='/Manage/APIKeys/'><i class="fa fa-key"></i> Manage Keys</a>
                                    </div>
                                    <div class="col-auto">
                                        API keys
                                    </div>
                                </div>
                                <div class="row justify-content-start">
                                    <div class="col-sm-4">
                                        <a class="btn btn-block btn-outline btn-sm btn-info" href='javascript:void(0);' onclick="requestAPIKey();"><i class="fa fa-key"></i> Request Key</a>
                                    </div>
                                    <div class="col-auto">
                                        Request a new API key.
                                    </div>
                                </div>
                                @if (!Model.EmailConfirmed)
                                {
                                    <div class="row justify-content-start">
                                        <div class="col-sm-4">
                                            <a class="btn btn-block btn-outline btn-sm btn-danger" href='@Url.Action("SendEmailConfirmation", "Account", null)'><i class="fa fa-exclamation"></i> Confirm Email</a>
                                        </div>
                                        <div class="col-auto">
                                            Confirm your email to secure your account.
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="row justify-content-start">
                                        <div class="col-sm-4">
                                            @Html.Partial(partialViewName: "_PartialManageSetting", model: new ManageSettingViewModel("emailTwoFactor", isActive: Model.TwoFactor))
                                        </div> 
                                        <div class="col-auto">
                                            Enable email 2-factor authentication.
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="ibox-content profile-content">
                            <h4>Notifications</h4>
                            <div class="row">
                                <div class="col-auto text-center">
                                    Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                </div>
                                <div class="col-auto text-center">
                                    Alert
                                </div>
                                <div class="col">
                                    &nbsp;
                                </div>
                            </div>
                            <div class="row">
                                @Html.Partial(partialViewName: "_PartialManageSetting", model: new ManageSettingViewModel("notifyPost", Model.Settings.NotifyOnOwnPostCommented))
                                @Html.Partial(partialViewName: "_PartialManageSetting", model: new ManageSettingViewModel("alertPost", Model.Settings.AlertOnOwnPostCommented))
                                <div class="col">
                                    Your posts receive a comment.
                                </div>
                            </div>
                            <div class="row">
                                @Html.Partial(partialViewName: "_PartialManageSetting", model: new ManageSettingViewModel("notifyComment", Model.Settings.NotifyOnOwnCommentReplied))
                                @Html.Partial(partialViewName: "_PartialManageSetting", model: new ManageSettingViewModel("alertComment", Model.Settings.AlertOnOwnCommentReplied))
                                <div class="col">
                                    Your comments receive a reply.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.NotifyOnNewPostSubscribedGroup) { <text> checked</text> } class="onoffswitch-checkbox" id="notifyNewPostGroup" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="notifyNewPostGroup">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.AlertOnNewPostSubscribedGroup) { <text> checked</text> } class="onoffswitch-checkbox" id="alertNewPostGroup" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="alertNewPostGroup">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    New post in a subscribed group.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.NotifyOnNewPostSubscribedUser) { <text> checked</text> } class="onoffswitch-checkbox" id="notifyNewPostUser" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="notifyNewPostUser">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.AlertOnNewPostSubscribedUser) { <text> checked</text> } class="onoffswitch-checkbox" id="alertNewPostUser" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="alertNewPostUser">
                                                <i class="fa fa-refresh fa-spin switch-spinner" "></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    New post from a subscribed user.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.NotifyOnPrivateMessage) { <text> checked</text> } class="onoffswitch-checkbox" id="notifyPrivateMessage" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="notifyPrivateMessage">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.AlertOnPrivateMessage) { <text> checked</text> } class="onoffswitch-checkbox" id="alertPrivateMessage" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="alertPrivateMessage">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    New Private Message
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.NotifyOnReceivedTip) { <text> checked</text> } class="onoffswitch-checkbox" id="notifyReceivedTip" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="notifyReceivedTip">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.AlertOnReceivedTip) { <text> checked</text> } class="onoffswitch-checkbox" id="alertReceivedTip" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="alertReceivedTip">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    Received tip.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.NotifyOnMentioned) { <text> checked</text> } class="onoffswitch-checkbox" id="notifyMentioned" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="notifyMentioned">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.AlertOnMentioned) { <text> checked</text> } class="onoffswitch-checkbox" id="alertMentioned" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="alertMentioned">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    Mentioned by others.
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="ibox-content profile-content">
                            <h4>Customization</h4>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.ColorTheme == "dark") { <text> checked</text> } class="onoffswitch-checkbox" id="colorTheme" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="colorTheme">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    [experimental] Use dark color theme.  Refresh page to take effect.
                                </div>
                            </div>
                            <div class="row">
                                @Html.Partial(partialViewName: "_PartialManageSetting", model: new ManageSettingViewModel("showOnline", Model.Settings.ShowOnline))
                                <div class="col">
                                    Hide online status.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.ViewAllLanguages) { <text> checked</text> } class="onoffswitch-checkbox" id="ViewAllLanguages" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="ViewAllLanguages">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    View posts in all languages.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <div class="switch">
                                        <div class="onoffswitch">
                                            <input type="checkbox" @if (Model.Settings.ViewTranslatedLanguages) { <text> checked</text> } class="onoffswitch-checkbox" id="ViewTranslatedLanguages" onclick="settingToggle(this)">
                                            <label class="onoffswitch-label" for="ViewTranslatedLanguages">
                                                <i class="fa fa-refresh fa-spin switch-spinner"></i>
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col">
                                    [experimental] View google translated posts automatically if they exist.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div>
                                        <br />
                                        <h4>User Languages</h4>
                                        <select id='languagesSelect' data-placeholder="Choose a Language..." class="chosen-select" multiple @*onchange="updateLanguages()"*@>
                                            @foreach (var l in Model.KnownLanguages)
                                            {
                                                if (!included.Contains(@l.Split(':')[0]) && Model.Languages.Contains(@l.Split(':')[0]))
                                                {
                                                    <option selected value="@l.Split(':')[0]">@l.Split(':')[1]</option>
                                                    included.Add(@l.Split(':')[0]);
                                                }
                                                else
                                                {
                                                    <option value="@l.Split(':')[0]">@l.Split(':')[1]</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="ibox">
                    <div class="ibox-content">
                        <h3>You are subscribing to</h3>
                        <p class="small">
                            You are subscribed to content from these users.  Their content will appear in your activity feed.
                        </p>
                        <div class="user-friends">
                            @foreach (var u in Model.TopFollowingVm)
                            {
                                <a href="@Url.Action(actionName: "Index", controllerName: "User", routeValues: new { username = u.Name })">
                                    <img class="img-circle" title="@u.Name" src="@Url.Action("UserImage", "Home", new { size = 30, UserId = u.AppId, v = u.ProfileImageVersion })" />
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <div class="ibox">
                    <div class="ibox-content">
                        <h3>Subscribing to you</h3>
                        <p class="small">
                            These users are subscribing to you.  Your content will appear in their activity feed.
                        </p>
                        <div class="user-friends">
                            @foreach (var u in Model.TopFollowersVm)
                            {
                                <a href="@Url.Action(actionName: "Index", controllerName: "User", routeValues: new { username = u.Name })">
                                    <img class="img-circle" title="@u.Name" src="@Url.Action("UserImage", "Home", new { size = 30, UserId = u.AppId, v = u.ProfileImageVersion })" />
                                </a>
                            }
                        </div>
                    </div>
                </div>
                <div class="ibox-title">
                    <div class="row">
                        <div class="col-md-5">
                            <a href="@Url.Action("Financial", "Manage")" class="btn btn-primary btn-outline">Account Financial</a>
                        </div>
                    </div>
                    <div class="ibox-tools">
                    </div>
                </div>

                <div class="ibox-title">
                    <h5>Groups</h5>
                    <div class="ibox-tools">
                    </div>
                </div>
                <div>
                    <div class="ibox-content profile-content">
                        @Html.Partial(partialViewName: "_PartialManageGroups", model: @Model.UserGroups)
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Activites</h5>
                    <div class="ibox-tools">
                        <a tabindex="-1" class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div id="posts">
                        @foreach (var p in Model.ActivityPosts)
                        {
                            @Html.Partial(partialViewName: "_PartialPostRenderVm", model: p)
                        }
                    </div>
                    <div>
                        <button id="btnLoadmore" class="btn btn-primary btn-block m" onclick="loadmore(@Model.UserId)"><i class="fa fa-arrow-down"></i> Show More <i id="loadmore" class="fa fa-circle-o-notch fa-spin" style="display:none"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/bundles/manage/index/css")
}

@section Scripts {
    <script type="text/javascript">
        var ub = @Model.UserBalance;
        var IsAuthenticated = "@Request.IsAuthenticated" == "True";
    </script>
    @Scripts.Render("~/bundles/manage/index")
}