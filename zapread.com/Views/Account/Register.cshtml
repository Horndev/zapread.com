@model zapread.com.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <br />
        <h2>Register</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="index.html">Home</a></li>
            <li class="breadcrumb-item"><a>Account</a></li>
            <li class="breadcrumb-item active">Register</li>
        </ol>
    </div>
    <div class="col-lg-2"></div>
</div>

<div class="loginColumns animated fadeInDown">
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <div class="ibox-content">
                <section id="loginForm">
                    <h3 class="text-center">Register</h3>
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "m-t", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", autocomplete="username", placeholder = Html.DisplayNameFor(m => m.UserName) })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", autocomplete="email", placeholder = Html.DisplayNameFor(m => m.Email) })
                        </div>
                        <div class="form-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", autocomplete="new-password", placeholder = Html.DisplayNameFor(m => m.Password) })
                        </div>
                        <div class="form-group">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", autocomplete = "new-password", placeholder = Html.DisplayNameFor(m => m.ConfirmPassword) })
                        </div>
                        <div class="form-group">
                            <div class="captcha-box" id="Captcha">
                                <img loading="lazy" src="data:image/png;base64, @Model.CaptchaSrcB64" class="img-fluid" />
                                <div class="captcha-audio-overlay" id="CaptchaAudioButton">
                                    <span class="captcha-audio-btn"><a class="btn btn-sm btn-outline-primary captcha-audio-btn"><i class="fa fa-volume-up"></i></a></span>
                                </div>
                                <audio id="CaptchaAudio" src='/Account/CaptchaAudio' type='audio/mpeg' preload='none'></audio>
                            </div>
                            @Html.TextBoxFor(m => m.Captcha, new { @class = "form-control", autocomplete="one-time-code", placeholder = Html.DisplayNameFor(m => m.Captcha) })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.RefCode, new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.RefCode) })
                        </div>
                        <div id="info-notifications" class="form-check">
                            @Html.CheckBoxFor(m => m.AcceptEmailsNotify, new { @class = "form-check-input" })
                            @Html.LabelFor(m => m.AcceptEmailsNotify, new { @class = "form-check-label" })
                            <br /><small>(This can be disabled at any time)</small><br /><br />
                        </div>
                        <button type="submit" class="btn btn-primary block full-width m-b">Register</button>
                        <p class="text-muted text-center"><small>Already have an account?</small></p>
                        <a class="btn btn-sm btn-white btn-block" href="@Url.Action("Login", "Account")">Login</a>
                    }
                </section>
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/account/register/css")  @*same css and scripts*@
}

@section Scripts {
    @Scripts.Render("~/bundles/account/register")
}
